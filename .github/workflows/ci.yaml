name: Huma DSP CI

on:
  pull_request_target:
    types: [opened, synchronize, reopened, edited]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get short git-sha for image tag
        id: short-sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short ${{ github.event.pull_request.head.sha }})"

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: huma-signals
          IMAGE_TAG: ${{ steps.short-sha.outputs.sha_short }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || aws ecr create-repository --repository-name  $ECR_REPOSITORY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"

      - name: Lint
        run: docker-compose -f ./docker-compose-ci.yml run lint-tests

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: load rn-reader docker image
        run: docker load -i rn-reader.tar.gz
      - name: Unit and e2e tests
        env:
          ENV: test
          CHAIN: GOERLI
          ALCHEMY_KEY_GOERLI: ${{ secrets.ALCHEMY_KEY_GOERLI }}
          WEB3_PROVIDER_URL: ${{ secrets.WEB3_PROVIDER_URL }}
          SENTRY_DSN: ""
          DATADOG_API_KEY: ""
          ETHERSCAN_API_KEY: ""
          PROVIDER_URL: ${{ secrets.WEB3_PROVIDER_URL }}
          # REQUEST_NETWORK_SUBGRAPH_ENDPOINT_URL: https://api.thegraph.com/subgraphs/name/requestnetwork/request-payments-goerli
          # REQUEST_NETWORK_INVOICE_API_URL: https://goerli.api.huma.finance/invoice
        run: docker-compose -f ./docker-compose-ci.yml run tests
