[tool.poetry]
name = "huma-signals"
version = "0.6.2"
description = "Enables access to high-quality signals about a borrower's income, assets, and liabilities."
authors = ["Jiatu Liu <jiatu@huma.finance>", "Ji Peng <ji@huma.finance>"]
license = "AGPL v3"
readme = "README.md"
packages = [{include = "huma_signals"}]
homepage = "https://github.com/00labs/huma-signals/"
documentation = "https://docs.huma.finance/developer-guidelines/decentralized_signal_portfolio"
repository = "https://github.com/00labs/huma-signals.git"

[tool.poetry.dependencies]
python = "~3.10"
structlog = "^22.3.0"
pandas = "^1.5.2"
web3 = "^6.1.0"
httpx = "^0.24.0"
aiofiles = "^22.1.0"
orjson = "^3.8.5"
urllib3 = "^1.26"
huma-utils = "^0.3.0"

[tool.poetry.group.dev.dependencies]
pytest-describe = "^2.0.1"
pytest = "^7.2.0"
isort = "^5.11.3"
flake8 = "^6.0.0"
black = "^22.12.0"
autoflake = "^2.0.0"
ipython = "^8.7.0"
pytest-cov = "^4.0.0"
pylint = "^2.15.10"
mypy = "^0.991"
pylint-google-style-guide-imports-enforcing = "^1.3.0"
pre-commit = "^3.0.0"
pytest-asyncio = "^0.20.3"
types-aiofiles = "^22.1.0.6"
vcrpy = "^4.2.1"
pytest-spec = "^3.2.0"
pandas-stubs = "^1.5.3.230321"
factory-boy = "^3.2.1"
faker = "^18.4.0"
types-factory-boy = "^0.4.1"
pytest-mock = "^3.10.0"
pylint-pydantic = "^0.1.6"
python-dotenv = "^1.0.0"

[tool.pytest.ini_options]
describe_prefixes = ["describe", "if", "when", "with", "without"]
python_functions = ["it_*", "its_*"]
asyncio_mode = "auto"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.autoflake]
in-place = true
remove-all-unused-imports = true
ignore-init-module-imports = true

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_configs = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
no_implicit_optional = true
no_implicit_reexport = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_untyped_fields = true

[[tool.mypy.overrides]]
module = ["vcr"]
ignore_missing_imports = true

[tool.pylint.messages_control]
# C0103, C0114, C0115, C0116: docstring and file name formats.
# R0801: similar lines.
# R0903: too fee public methods.
# W0511: TODOs.
disable = "C0103, C0114, C0115, C0116, R0801, R0903, W0511"
# https://github.com/samuelcolvin/pydantic/issues/1961
extension-pkg-whitelist = "pydantic, orjson"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.master]
load-plugins = "pylint_google_style_guide_imports_enforcing, pylint_pydantic"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
